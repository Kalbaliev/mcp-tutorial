{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///app/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///app/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,KASb;QATa,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF,GATa;IAUd,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///app/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,KAA4D;QAA5D,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC,GAA5D;IACb,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///app/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  )\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  )\n}\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,WAAW,KAIoC;QAJpC,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OACmD,GAJpC;IAKlB,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAC3B,aAAU;gBACV,WAAU;0BAET;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;AAGjC;KArBS;AAuBT,SAAS,UAAU,KAIoD;QAJpD,EACjB,SAAS,EACT,cAAc,UAAU,EACxB,GAAG,OACkE,GAJpD;IAKjB,qBACE,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,aAAU;QACV,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA,gBAAgB,cACd,8CACF,gBAAgB,gBACd,gDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAClC,aAAU;YACV,WAAU;;;;;;;;;;;AAIlB;MAzBS","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///app/components/chat-bot.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useRef, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport {\n  Send,\n  Bot,\n  User,\n  Loader2,\n  Sparkles,\n  Plus,\n  MessageSquare,\n  PanelLeft,\n  MapPin,\n  Wallet,\n  Calendar,\n  HelpCircle,\n} from \"lucide-react\"\n\ninterface Message {\n  id: string\n  content: string\n  role: \"user\" | \"assistant\"\n  timestamp: Date\n  isTyping?: boolean\n}\n\ninterface ChatSession {\n  id: string\n  name: string\n  messages: Message[]\n  createdAt: Date\n}\n\nfunction TypingAnimation({ text, onComplete }: { text: string; onComplete: () => void }) {\n  const [displayedText, setDisplayedText] = useState(\"\")\n  const [currentIndex, setCurrentIndex] = useState(0)\n\n  useEffect(() => {\n    if (currentIndex < text.length) {\n      const timer = setTimeout(() => {\n        setDisplayedText((prev) => prev + text[currentIndex])\n        setCurrentIndex((prev) => prev + 1)\n      }, 25)\n\n      return () => clearTimeout(timer)\n    } else if (currentIndex === text.length && text.length > 0) {\n      onComplete()\n    }\n  }, [currentIndex, text, onComplete])\n\n  return (\n    <span className=\"animate-fade-in-up\">\n      {displayedText}\n      {currentIndex < text.length && (\n        <span className=\"inline-block w-0.5 h-5 bg-primary ml-1 animate-pulse rounded-sm\" />\n      )}\n    </span>\n  )\n}\n\nfunction MarkdownRenderer({ content }: { content: string }) {\n  const renderMarkdown = (text: string) => {\n    // Bold text\n    text = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\")\n    // Italic text\n    text = text.replace(/\\*(.*?)\\*/g, \"<em>$1</em>\")\n    // Code blocks\n    text = text.replace(\n      /```([\\s\\S]*?)```/g,\n      '<pre class=\"bg-muted p-3 rounded-lg overflow-x-auto my-2\"><code>$1</code></pre>',\n    )\n    // Inline code\n    text = text.replace(/`(.*?)`/g, '<code class=\"bg-muted px-1.5 py-0.5 rounded text-sm\">$1</code>')\n    // Line breaks\n    text = text.replace(/\\n/g, \"<br>\")\n\n    return text\n  }\n\n  return (\n    <div\n      className=\"prose prose-sm max-w-none text-foreground\"\n      dangerouslySetInnerHTML={{ __html: renderMarkdown(content) }}\n    />\n  )\n}\n\nexport function ChatBot() {\n  const [sessions, setSessions] = useState<ChatSession[]>([])\n  const [currentSessionId, setCurrentSessionId] = useState<string | null>(null)\n  const [input, setInput] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [typingMessageId, setTypingMessageId] = useState<string | null>(null)\n  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(false)\n  const scrollAreaRef = useRef<HTMLDivElement>(null)\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const currentSession = sessions.find((s) => s.id === currentSessionId)\n  const messages = currentSession?.messages || []\n\n  const createNewSession = () => {\n    setCurrentSessionId(null)\n  }\n\n  const switchToSession = (sessionId: string) => {\n    setCurrentSessionId(sessionId)\n  }\n\n  const generateSessionName = (message: string) => {\n    return message.length > 25 ? message.substring(0, 25) + \"...\" : message\n  }\n\n  const handleTypingComplete = (messageId: string) => {\n    setSessions((prev) =>\n      prev.map((session) =>\n        session.id === currentSessionId\n          ? {\n              ...session,\n              messages: session.messages.map((msg) => (msg.id === messageId ? { ...msg, isTyping: false } : msg)),\n            }\n          : session,\n      ),\n    )\n  }\n\n  useEffect(() => {\n    const scrollToBottom = () => {\n      if (scrollAreaRef.current) {\n        const scrollContainer = scrollAreaRef.current.querySelector(\"[data-radix-scroll-area-viewport]\")\n        if (scrollContainer) {\n          scrollContainer.scrollTop = scrollContainer.scrollHeight\n        }\n      }\n    }\n\n    setTimeout(scrollToBottom, 100)\n  }, [messages, isLoading, typingMessageId])\n\n  const sendMessage = async (messageText?: string) => {\n    const messageToSend = messageText || input.trim()\n    if (!messageToSend || isLoading) return\n\n    let sessionId = currentSessionId\n\n    if (!sessionId) {\n      const newSession: ChatSession = {\n        id: Date.now().toString(),\n        name: generateSessionName(messageToSend),\n        messages: [],\n        createdAt: new Date(),\n      }\n      setSessions((prev) => [newSession, ...prev])\n      sessionId = newSession.id\n      setCurrentSessionId(sessionId)\n    }\n\n    setError(null)\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: messageToSend,\n      role: \"user\",\n      timestamp: new Date(),\n    }\n\n    setSessions((prev) =>\n      prev.map((session) => {\n        if (session.id === sessionId) {\n          const updatedMessages = [...session.messages, userMessage]\n          return {\n            ...session,\n            messages: updatedMessages,\n            name: session.messages.length === 0 ? generateSessionName(userMessage.content) : session.name,\n          }\n        }\n        return session\n      }),\n    )\n\n    setInput(\"\")\n    setIsLoading(true)\n\n    setTimeout(() => {\n      inputRef.current?.focus()\n    }, 0)\n\n    try {\n      const response = await fetch(\"/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: userMessage.content,\n          history: messages,\n        }),\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      const data = await response.json()\n\n      const assistantMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        content: data.message || \"Sorry, I could not process your request.\",\n        role: \"assistant\",\n        timestamp: new Date(),\n        isTyping: true,\n      }\n\n      setIsLoading(false)\n      setSessions((prev) =>\n        prev.map((session) =>\n          session.id === sessionId ? { ...session, messages: [...session.messages, assistantMessage] } : session,\n        ),\n      )\n      setTypingMessageId(assistantMessage.id)\n    } catch (error) {\n      console.error(\"Error sending message:\", error)\n      setError(\"Failed to send message. Please try again.\")\n      setIsLoading(false)\n      setTimeout(() => {\n        inputRef.current?.focus()\n      }, 0)\n    }\n  }\n\nconst suggestionPrompts = [\n  { text: \"Mənim adım Yusifdir,bazada olan şəxsi məlumatlarıma əsasən yaşadığım şəhərdə gəzməli yerlər barəsində təkliflər verməyini istəyirəm?\", icon: MapPin },\n  { text: \"Balansımdakı pulu öyrənmək istəyirəm. Neçə manat pul var,adım Alidir.Cari məzənnə ilə Dollardan manata konvertasiya edin.\", icon: Wallet },\n  { text: \"Adım Orxan, ad günümə neçə gün qaldığını öyrənmək istəyirəm. Bu günün tarixini qeyd edərək hesablama apar.\", icon: Calendar },\n  { text: \"Mənə gündəlik rutinimdə kömək edəcək məsləhətlər ver\", icon: HelpCircle },\n]\n\n  const handleSuggestionClick = (prompt: string) => {\n    sendMessage(prompt)\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault()\n      sendMessage()\n    }\n  }\n\n  return (\n    <div className=\"flex h-screen overflow-hidden bg-white\">\n      <div\n        className={`${isSidebarCollapsed ? \"w-16\" : \"w-64\"} bg-gray-50 border-r border-gray-200 flex flex-col transition-all duration-300 ease-in-out`}\n      >\n        <div className=\"p-2 border-b border-gray-200 flex items-center justify-between\">\n          <button\n            onClick={() => isSidebarCollapsed && setIsSidebarCollapsed(false)}\n            className={`flex items-center gap-2 ${isSidebarCollapsed ? \"hover:bg-gray-200 p-2 rounded-lg transition-colors\" : \"\"}`}\n          >\n            <div className=\"h-8 w-8 rounded-lg bg-black flex items-center justify-center shadow-sm\">\n              <Sparkles className=\"h-3 w-3 text-white\" />\n            </div>\n            {!isSidebarCollapsed && (\n              <span className=\"font-serif font-bold text-lg text-black whitespace-nowrap\">AI Chatbot</span>\n            )}\n          </button>\n          {!isSidebarCollapsed && (\n            <Button\n              onClick={() => setIsSidebarCollapsed(!isSidebarCollapsed)}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"p-2 hover:bg-gray-200 transition-colors\"\n            >\n              <PanelLeft className=\"h-4 w-4\" />\n            </Button>\n          )}\n        </div>\n\n        {!isSidebarCollapsed && (\n          <div>\n            <div className=\"p-4\">\n              <Button\n                onClick={createNewSession}\n                className=\"w-full bg-black hover:bg-gray-800 text-white rounded-lg flex items-center gap-2 transition-colors\"\n              >\n                <Plus className=\"h-4 w-4\" />\n                New Chat\n              </Button>\n            </div>\n\n            <ScrollArea className=\"flex-1\">\n              <div className=\"p-2 space-y-1\">\n                {sessions.map((session) => (\n                  <button\n                    key={session.id}\n                    onClick={() => switchToSession(session.id)}\n                    className={`w-full text-left p-3 rounded-lg transition-colors flex items-center gap-2 ${\n                      currentSessionId === session.id ? \"bg-gray-200 text-black\" : \"hover:bg-gray-100 text-gray-700\"\n                    }`}\n                  >\n                    <MessageSquare className=\"h-4 w-4 flex-shrink-0\" />\n                    <span className=\"truncate text-sm\">{session.name}</span>\n                  </button>\n                ))}\n              </div>\n            </ScrollArea>\n          </div>\n        )}\n\n        {isSidebarCollapsed && (\n          <div className=\"flex-1 flex flex-col items-center\">\n            <div className=\"p-2 space-y-2 w-full flex flex-col items-center\">\n              <Button\n                onClick={createNewSession}\n                className=\"w-12 h-12 bg-black hover:bg-gray-800 text-white rounded-lg flex items-center justify-center transition-colors\"\n                title=\"New Chat\"\n              >\n                <Plus className=\"h-5 w-5\" />\n              </Button>\n\n              <div className=\"space-y-1 w-full flex flex-col items-center\">\n                {sessions.slice(0, 8).map((session) => (\n                  <button\n                    key={session.id}\n                    onClick={() => switchToSession(session.id)}\n                    className={`w-12 h-12 rounded-lg transition-colors flex items-center justify-center ${\n                      currentSessionId === session.id ? \"bg-gray-200 text-black\" : \"hover:bg-gray-100 text-gray-700\"\n                    }`}\n                    title={session.name}\n                  >\n                    <MessageSquare className=\"h-5 w-5\" />\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex-1 flex flex-col min-h-0\">\n        <ScrollArea className=\"flex-1 min-h-0\" ref={scrollAreaRef}>\n          <div className=\"max-w-4xl mx-auto px-3 sm:px-6 py-2 sm:py-3 space-y-3 sm:space-y-4\">\n            {messages.length === 0 && (\n              <div className=\"flex items-center justify-center py-8 animate-fade-in-up\">\n                <div className=\"inline-block px-8 py-6 bg-gray-100 rounded-2xl border border-gray-200 shadow-sm\">\n                  <div className=\"h-12 w-12 rounded-xl bg-gray-200 flex items-center justify-center mx-auto mb-4\">\n                    <Bot className=\"h-6 w-6 text-black\" />\n                  </div>\n                  <h2 className=\"font-serif font-bold text-lg text-black\">How can I help you today?</h2>\n                </div>\n              </div>\n            )}\n\n            {messages.map((message) => (\n              <div\n                key={message.id}\n                className={`flex gap-2 sm:gap-4 animate-fade-in-up ${\n                  message.role === \"user\" ? \"justify-end\" : \"justify-start\"\n                }`}\n              >\n                {message.role === \"assistant\" && (\n                  <div className=\"h-8 w-8 sm:h-10 sm:w-10 rounded-lg sm:rounded-xl bg-gray-100 flex items-center justify-center flex-shrink-0 shadow-sm\">\n                    <Bot className=\"h-4 w-4 sm:h-5 sm:w-5 text-black\" />\n                  </div>\n                )}\n\n                {message.role === \"user\" ? (\n                  <div className=\"max-w-[85%] sm:max-w-[75%] rounded-3xl px-2 sm:px-3 py-1.5 sm:py-2 shadow-sm bg-black text-white ml-auto\">\n                    <div className=\"text-sm sm:text-base leading-relaxed whitespace-pre-wrap break-words\">\n                      {message.content}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"max-w-[85%] sm:max-w-[75%] py-2\">\n                    <div className=\"text-sm sm:text-base leading-relaxed text-black\">\n                      {message.isTyping ? (\n                        <TypingAnimation text={message.content} onComplete={() => handleTypingComplete(message.id)} />\n                      ) : (\n                        <MarkdownRenderer content={message.content} />\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                {message.role === \"user\" && (\n                  <div className=\"h-8 w-8 sm:h-10 sm:w-10 rounded-lg sm:rounded-xl bg-gray-200 flex items-center justify-center flex-shrink-0 shadow-sm\">\n                    <User className=\"h-4 w-4 sm:h-5 sm:w-5 text-black\" />\n                  </div>\n                )}\n              </div>\n            ))}\n\n            {isLoading && (\n              <div className=\"flex gap-2 sm:gap-4 justify-start animate-fade-in-up\">\n                <div className=\"h-8 w-8 sm:h-10 sm:w-10 rounded-lg sm:rounded-xl bg-gray-100 flex items-center justify-center flex-shrink-0 shadow-sm\">\n                  <Bot className=\"h-4 w-4 sm:h-5 sm:w-5 text-black\" />\n                </div>\n                <div className=\"bg-white border border-gray-200 rounded-xl sm:rounded-2xl px-3 sm:px-5 py-3 sm:py-4 shadow-sm\">\n                  <div className=\"flex items-center gap-2 sm:gap-3\">\n                    <div className=\"flex gap-1\">\n                      <div\n                        className=\"w-1.5 h-1.5 sm:w-2 sm:h-2 bg-gray-400 rounded-full animate-bounce\"\n                        style={{ animationDelay: \"0ms\" }}\n                      />\n                      <div\n                        className=\"w-1.5 h-1.5 sm:w-2 sm:h-2 bg-gray-400 rounded-full animate-bounce\"\n                        style={{ animationDelay: \"150ms\" }}\n                      />\n                      <div\n                        className=\"w-1.5 h-1.5 sm:w-2 sm:h-2 bg-gray-400 rounded-full animate-bounce\"\n                        style={{ animationDelay: \"300ms\" }}\n                      />\n                    </div>\n                    <span className=\"text-sm text-gray-600\">Thinking...</span>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </ScrollArea>\n\n        <div className=\"flex-shrink-0 bg-white\">\n          <div className=\"max-w-4xl mx-auto px-3 sm:px-6 py-3\">\n            {error && (\n              <div className=\"mb-2 p-2 bg-gray-100 border border-gray-300 rounded-lg text-black text-sm animate-fade-in-up\">\n                {error}\n              </div>\n            )}\n\n            {messages.length === 0 && (\n              <div className=\"mb-4\">\n                <div className=\"grid grid-cols-2 gap-3 mb-4\">\n                  {suggestionPrompts.map((prompt, index) => (\n                    <button\n                      key={index}\n                      onClick={() => handleSuggestionClick(prompt.text)}\n                      className=\"p-4 bg-white border border-gray-200 rounded-xl hover:bg-gray-50 hover:border-gray-300 transition-all duration-200 text-left shadow-sm hover:shadow-md flex items-center gap-3 min-h-[60px]\"\n                      disabled={isLoading}\n                    >\n                      <div className=\"h-8 w-8 rounded-lg bg-gray-100 flex items-center justify-center flex-shrink-0\">\n                        <prompt.icon className=\"h-4 w-4 text-black\" />\n                      </div>\n                      <span className=\"text-sm text-gray-700 font-medium leading-relaxed\">{prompt.text}</span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex gap-2 sm:gap-3 items-end\">\n              <div className=\"flex-1 relative\">\n                <Input\n                  ref={inputRef}\n                  value={input}\n                  onChange={(e) => setInput(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder=\"Type your message...\"\n                  disabled={isLoading}\n                  className=\"min-h-[40px] sm:min-h-[44px] px-3 sm:px-4 py-2 text-base rounded-lg sm:rounded-xl border-gray-300 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500 bg-white focus:bg-white transition-colors resize-none touch-manipulation text-black\"\n                />\n              </div>\n              <Button\n                onClick={() => sendMessage()}\n                disabled={!input.trim() || isLoading}\n                size=\"lg\"\n                className=\"h-[40px] w-[40px] sm:h-[44px] sm:w-[44px] rounded-lg sm:rounded-xl bg-black hover:bg-gray-800 transition-all duration-200 shadow-lg hover:shadow-xl disabled:opacity-50 touch-manipulation text-white\"\n              >\n                {isLoading ? (\n                  <Loader2 className=\"h-4 w-4 sm:h-5 sm:w-5 animate-spin\" />\n                ) : (\n                  <Send className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                )}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}